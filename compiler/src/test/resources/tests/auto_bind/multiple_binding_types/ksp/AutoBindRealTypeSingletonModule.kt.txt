// Code generated by Auto Dagger. Do not edit.
package tests.auto_bind.multiple_binding_types

import dagger.Binds
import dagger.Module
import dagger.hilt.InstallIn
import dagger.hilt.codegen.OriginatingElement
import dagger.hilt.components.SingletonComponent
import dagger.multibindings.IntoMap
import dagger.multibindings.IntoSet
import dagger.multibindings.StringKey
import javax.`annotation`.processing.Generated

@Generated("se.ansman.dagger.auto.compiler.autobind.AutoBindProcessor")
@Module
@InstallIn(SingletonComponent::class)
@OriginatingElement(topLevelClass = RealType::class)
public abstract class AutoBindRealTypeSingletonModule private constructor() {
  @Binds
  public abstract fun bindRealTypeAsType1(realType: RealType): Type1

  @Binds
  @IntoSet
  public abstract fun bindRealTypeAsType2IntoSet(realType_: RealType): Type2

  @Binds
  @IntoMap
  @StringKey("test")
  public abstract fun bindRealTypeAsType3IntoMap(realType__: RealType): Type3
}